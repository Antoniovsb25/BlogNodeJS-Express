//Carregando módulos
const express = require('express')
const handlebars = require('express-handlebars')
const bodyParser = require('body-parser')
const app = express()
const admin = require('./routes/admin')
const path = require('path')
const mongoose = require('mongoose')
const session = require('express-session')
const flash = require('connect-flash')

//Configurações

    //Sessão
    app.use(session({
        secret: 'cursodenode',
        resave: true,
        saveUnitilialized: true
    }))
    app.use(flash())

    //MiddleWare
    app.use((req,res,next)=> {
        res.locals.success_msg = req.flash('success_msg')
        res.locals.error_msg = req.flash('error_msg')
        next()
    })
    //body parser
    app.use(bodyParser.urlencoded({extended: true}))
    app.use(bodyParser.json())

    //HandleBars
    app.engine('handlebars', handlebars({defaultLayout: 'main'}))
    app.set('view engine', 'handlebars')

    //Mongoose
    mongoose.Promise = global.Promise;
    mongoose.connect('mongodb://localhost/blogapp', {
        useNewUrlParser: true, 
        useUnifiedTopology: true
    }).then(()=> {
        console.log('Conectado com sucesso ao mongo!')
    }).catch((err)=> {
        console.log(`Erro ao se conectar ao mongo: ${err}`)
    })
    //Public
    app.use(express.static(path.join(__dirname, 'public'))) //mostrando ao express aonde estão os arquivos estáticos
    app.use((req,res,next)=> {
        console.log("Oi, eu sou um middleware")
        next()
    })
//Rotas

    app.use('/admin', admin) //prefixo de todas as rotas

//Outros
const PORT = 8081
app.listen(PORT, () => {
    console.log("Servidor rodando com sucesso!")
})

